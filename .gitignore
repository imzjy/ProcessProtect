# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app


*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
# *.psess
# *.vsp
# *.vspx
# *.sap
#
# # Visual Studio Trace Files
# *.e2e
#
# # TFS 2012 Local Workspace
# $tf/
#
# # Guidance Automation Toolkit
# *.gpState
#
# # ReSharper is a .NET coding add-in
# _ReSharper*/
# *.[Rr]e[Ss]harper
# *.DotSettings.user
#
# # TeamCity is a build add-in
# _TeamCity*
#
# # DotCover is a Code Coverage Tool
# *.dotCover
#
# # AxoCover is a Code Coverage Tool
# .axoCover/*
# !.axoCover/settings.json
#
# # Coverlet is a free, cross platform Code Coverage Tool
# coverage*.json
# coverage*.xml
# coverage*.info
#
# # Visual Studio code coverage results
# *.coverage
# *.coveragexml
#
# # NCrunch
# _NCrunch_*
# .*crunch*.local.xml
# nCrunchTemp_*
#
# # MightyMoose
# *.mm.*
# AutoTest.Net/
#
# # Web workbench (sass)
# .sass-cache/
#
# # Installshield output folder
# [Ee]xpress/
#
# # DocProject is a documentation generator add-in
# DocProject/buildhelp/
# DocProject/Help/*.HxT
# DocProject/Helpor Visual Studio
# .localhistory/
#
# # Visual Sse healthcheck temp database
# healthchecksdb
#
# # Backup folder for Package Reference Convert tool in Visual Studio 2017
# MigrationBackup/
#
# # Ionide (cross platform F# VS Code tools) working folder
# .ionide/
#
# # Fody - auto-generated XML schema
# FodyWeavers.xsd
#
# # VS Code files for those working on multiple tools
# .vscode/*
# !.vscode/settings.json
# !.vscode/tasks.json
# !.vscode/launch.json
# !.vscode/extensions.json
# *.code-workspace
#
# # Local History for Visual Studio Code
# .history/
#
# # Windows Installer files from build outputs
# *.cab
# *.msi
# *.msix
# *.msm
# *.msp
#
# # JetBrains Rider
# *.sln.iml## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (Monoj
*_wpftmp.csproj
*.log
*.tutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBui however generallions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History fDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[ct
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proy it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
#*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans7 auto generated files
Generated\ Files/

# 

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Proje.codegen.cs

# Including strong nithub/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple 372622)
#bower_components/

# RIt files from converting an old project file
# ,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XMLptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# Gols for Visual Studio
.ntvs_anal# Visual Studio 6 workspkspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical ut
**/*.HTMdArtifacts**/*.DesktopClient/Model

.vs/*
